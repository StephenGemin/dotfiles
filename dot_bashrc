# -*-mode:bash-*- vim:ft=bash

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [ -f "$HOME/.bashenv" ]; then
    . "$HOME/.bashenv"
fi

# Command-line shell completions
# -----------------------------------------------------------------------------
# See https://github.com/twpayne/chezmoi/blob/master/docs/REFERENCE.md
if command -v chezmoi > /dev/null; then
    eval "$(chezmoi completion bash)"
fi

# Include customized aliases, functions, etc
# -----------------------------------------------------------------------------
local_plugins=(
    clipboard
    datetime
    file_management
    file_navigation
    git
    power_management
    tool_configs
    core
    override_standards
)
for plugin in "${local_plugins[@]}"; do
    # would prefer to use zinit, but couldn't figure out syntax
    # particulaly not cloning file, but using local source
    source "$XDG_CONFIG_HOME/sh_plugins/$plugin"
done

# Aliases
alias cd="$ZOXIDE_KEY" # map zoxide alias
eval "alias ${ZOXIDE_KEY}-='${ZOXIDE_KEY} -'"

# Keybindings
bind 'set show-all-if-ambiguous on'
bind 'TAB:menu-complete'

# Load custom code from separate configuration file.
# -----------------------------------------------------------------------------
if [ -f "$HOME"/.bash_extras ]; then
    . "$HOME"/.bash_extras
fi

# Shell integrations
# -----------------------------------------------------------------------------
# Note to future self: order is important here as some commands in this section modify PATH
if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi
if [ "$isWindows" = 0 ]; then
    if [ -f "$HOME/.cargo/env" ]; then
        . "$HOME/.cargo/env"
    fi
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

eval "$(fzf --bash)"
eval "$(oh-my-posh init bash --config $XDG_CONFIG_HOME/ohmyposh/zen.toml)"
eval "$(zoxide init --cmd $ZOXIDE_KEY bash)"
